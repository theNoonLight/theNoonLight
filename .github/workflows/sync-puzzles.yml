name: Sync Puzzles to Supabase

on:
  push:
    branches: [ main, master ]
    paths:
      - 'puzzles/**'
      - 'thenoonlight-app/puzzles/**'
  workflow_dispatch: # Allow manual trigger

jobs:
  sync-puzzles:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: 'thenoonlight-app/pnpm-lock.yaml'
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Debug environment
      run: |
        echo "Current directory: $(pwd)"
        echo "Repository contents:"
        ls -la
        echo "Checking for thenoonlight-app directory:"
        ls -la thenoonlight-app/ || echo "thenoonlight-app directory not found"
        echo "Checking for puzzles directory:"
        ls -la puzzles/ || echo "puzzles directory not found in root"
        ls -la thenoonlight-app/puzzles/ || echo "puzzles directory not found in thenoonlight-app"
      
    - name: Determine working directory
      id: set-dir
      run: |
        if [ -d "thenoonlight-app" ]; then
          echo "working-dir=./thenoonlight-app" >> $GITHUB_OUTPUT
          echo "Found thenoonlight-app directory"
        else
          echo "working-dir=." >> $GITHUB_OUTPUT
          echo "Using root directory"
        fi
      
    - name: Install dependencies
      run: |
        WORK_DIR="${{ steps.set-dir.outputs.working-dir }}"
        cd "$WORK_DIR"
        pnpm install
      
    - name: List puzzle files
      id: list-puzzles
      run: |
        WORK_DIR="${{ steps.set-dir.outputs.working-dir }}"
        echo "Working directory: $WORK_DIR"
        if [ -d "$WORK_DIR/puzzles" ]; then
          echo "Puzzle files found:"
          find "$WORK_DIR/puzzles" -name "*.json" -o -name "*.zip" | head -20
          echo "Puzzle directories:"
          ls -la "$WORK_DIR/puzzles/"
        else
          echo "No puzzles directory found in $WORK_DIR"
          exit 1
        fi
      
    - name: Validate puzzles
      run: |
        WORK_DIR="${{ steps.set-dir.outputs.working-dir }}"
        cd "$WORK_DIR"
        pnpm run validate-puzzles
      
    - name: Sync puzzles to Supabase
      run: |
        WORK_DIR="${{ steps.set-dir.outputs.working-dir }}"
        cd "$WORK_DIR"
        echo "Starting puzzle sync from $WORK_DIR..."
        pnpm run sync-puzzles
        echo "Sync command completed"
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      
    - name: Verify sync
      run: |
        echo "Puzzle sync completed successfully!"
        echo "Check your Supabase dashboard to verify puzzles were uploaded."
